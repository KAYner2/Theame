import { Link } from 'react-router-dom';
import { Button } from '@/components/ui/button';
import { Heart } from 'lucide-react';
import { useCart } from '@/context/CartContext';
import { useFavorites } from '@/context/FavoritesContext';
import { toast } from '@/hooks/use-toast';

type VariantCardProps = {
  product: {
    id: number;
    name: string;
    slug: string;
    image_url: string | null;
    min_price_cache: number | null;
    is_active: boolean | null;
  };
  className?: string;
  /** –ï—Å–ª–∏ —Ç—ã —Å–¥–µ–ª–∞–ª –æ–±—ë—Ä—Ç–∫—É, –∫–æ—Ç–æ—Ä–∞—è –æ—Ç–¥–∞—ë—Ç –≤–∞—Ä–∏–∞–Ω—Ç–Ω—ã–µ –ø–æ /catalog/:slug ‚Äî –ø–æ–º–µ–Ω—è–π –Ω–∞ true */
  useCatalogUrl?: boolean;
};

const fmt = (n?: number | null) =>
  typeof n === 'number' ? `${n.toLocaleString('ru-RU')} ‚ÇΩ` : '';

export function VariantFlowerCard({
  product,
  className,
  useCatalogUrl = false,
}: VariantCardProps) {
  const { addToCart } = useCart();
  const { isFavorite, addToFavorites, removeFromFavorites } = useFavorites();

  const favId = `v:${product.id}`;
  const isFav = isFavorite(favId);

  // –ö—É–¥–∞ –≤–µ–¥—ë—Ç –∫–∞—Ä—Ç–æ—á–∫–∞:
  const productUrl = useCatalogUrl ? `/catalog/${product.slug}` : `/v/${product.slug}`;

  const handleToggleFavorite = () => {
    if (isFav) {
      removeFromFavorites(favId);
      toast({ title: '–£–¥–∞–ª–µ–Ω–æ –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ', description: `${product.name} —É–¥–∞–ª—ë–Ω –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ` });
    } else {
      addToFavorites({
        id: favId,
        name: product.name,
        price: product.min_price_cache ?? 0,
        image: product.image_url || '/placeholder.svg',
        description: '',
        category: '–†–∞–∑–Ω–æ–µ',
        inStock: !!product.is_active,
        quantity: 1,
        colors: [],
        size: 'variant',
        occasion: [],
      } as any);
      toast({ title: '–î–æ–±–∞–≤–ª–µ–Ω–æ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ', description: `${product.name} –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ` });
    }
  };

  const handleAddToCart = async () => {
    try {
      // –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π –∏–º–ø–æ—Ä—Ç supabase ‚Äî –±–µ–∑ –ø–æ–±–æ—á–µ–∫ –∏ –±–µ–∑ –Ω–∞—Ä—É—à–µ–Ω–∏–π –ø—Ä–∞–≤–∏–ª —Ö—É–∫–æ–≤
      const { supabase } = await import('@/integrations/supabase/client');

      // –ë–µ—Ä—ë–º –ü–ï–†–í–´–ô –∞–∫—Ç–∏–≤–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç (–∫–∞–∫ ¬´–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é¬ª –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ —Ç–æ–≤–∞—Ä–∞)
      const { data, error } = await supabase
        .from('product_variants')
        .select('id, product_id, title, price, image_url, composition, is_active, sort_order')
        .eq('product_id', product.id)
        .eq('is_active', true)
        .order('sort_order', { ascending: true })
        .limit(1);

      if (error) throw error;

      const v = (data ?? [])[0];
      if (!v) {
        // –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ ‚Äî –æ—Ç–∫—Ä–æ–µ–º –∫–∞—Ä—Ç–æ—á–∫—É, –ø—É—Å—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±–µ—Ä–µ—Ç
        window.location.href = productUrl;
        return;
      }

      addToCart({
        id: `vp:${product.id}:${v.id}`,
        name: `${product.name} ‚Äî ${v.title}`,
        price: v.price || 0,
        image: v.image_url || product.image_url || '/placeholder.svg',
        description: v.composition || '',
        category: '–†–∞–∑–Ω–æ–µ',
        inStock: !!product.is_active,
        quantity: 1,
        colors: [],
        size: v.title,
        occasion: [],
      } as any);

      toast({
        title: '–î–æ–±–∞–≤–ª–µ–Ω–æ –≤ –∫–æ—Ä–∑–∏–Ω—É',
        description: `${product.name} (${v.title}) –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–æ—Ä–∑–∏–Ω—É`,
      });
    } catch (e) {
      console.error('[VariantFlowerCard] addToCart error:', e);
      // –ù–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π ‚Äî –æ—Ç–∫—Ä–æ–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É —Ç–æ–≤–∞—Ä–∞
      window.location.href = productUrl;
    }
  };

  return (
    <div className={`group relative ${className || ''}`}>
      <Link to={productUrl} aria-label={product.name} className="block">
        {/* üì∏ –§–æ—Ç–æ ‚Äî –∫–≤–∞–¥—Ä–∞—Ç 1:1 */}
        <div className="relative overflow-hidden rounded-2xl aspect-square">
          <img
            src={product.image_url || '/placeholder.svg'}
            alt={product.name}
            className="w-full h-full object-cover transition-transform duration-300 group-hover:scale-105"
            loading="lazy"
          />
        </div>

        {/* üìù –ù–∞–∑–≤–∞–Ω–∏–µ –∏ —Ü–µ–Ω–∞ ¬´–æ—Ç ...¬ª */}
        <div className="mt-3 px-1">
          <h3 className="text-sm md:text-base font-normal leading-snug text-gray-800 line-clamp-2">
            {product.name}
          </h3>

          <div className="mt-1 flex items-center justify-between">
            <span className="text-base md:text-lg font-semibold text-gray-900">
              {product.min_price_cache != null ? `–æ—Ç ${fmt(product.min_price_cache)}` : '–¶–µ–Ω–∞ –ø–æ –∑–∞–ø—Ä–æ—Å—É'}
            </span>

            {/* ‚ù§Ô∏è –ò–∑–±—Ä–∞–Ω–Ω–æ–µ */}
            <button
              onClick={(e) => {
                e.preventDefault();
                e.stopPropagation();
                handleToggleFavorite();
              }}
              aria-pressed={isFav}
              className={`p-2 rounded-full transition-all duration-200 ${
                isFav
                  ? 'bg-destructive text-destructive-foreground'
                  : 'bg-muted hover:bg-destructive hover:text-destructive-foreground'
              }`}
              title={isFav ? '–£–±—Ä–∞—Ç—å –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ' : '–î–æ–±–∞–≤–∏—Ç—å –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ'}
            >
              <Heart className={`w-4 h-4 ${isFav ? 'fill-current' : ''}`} />
            </button>
          </div>
        </div>
      </Link>

      {/* üõí –ö–Ω–æ–ø–∫–∞ –í –∫–æ—Ä–∑–∏–Ω—É / –°–¥–µ–ª–∞—Ç—å –ø—Ä–µ–¥–∑–∞–∫–∞–∑ */}
      <div className="mt-2 px-1">
        {product.is_active ? (
          <Button
            onClick={(e) => {
              e.preventDefault();
              e.stopPropagation();
              handleAddToCart();
            }}
            className="rounded-full px-6 h-10 text-sm md:text-base font-medium bg-[#819570] hover:bg-[#6f7f5f] text-white transition-colors"
          >
            –í –∫–æ—Ä–∑–∏–Ω—É
          </Button>
        ) : (
          <Button
            onClick={(e) => {
              e.preventDefault();
              e.stopPropagation();
              window.open('https://wa.me/message/XQDDWGSEL35LP1', '_blank');
            }}
            className="rounded-full px-6 h-10 text-sm md:text-base font-medium bg-[#819570] hover:bg-[#6f7f5f] text-white transition-colors"
          >
            –°–¥–µ–ª–∞—Ç—å –ø—Ä–µ–¥–∑–∞–∫–∞–∑
          </Button>
        )}
      </div>
    </div>
  );
}
